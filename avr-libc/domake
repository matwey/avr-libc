#!/bin/sh
#
# Copyright (c) 2002
# Reinhard Jessich  <reinhard.jessich@telering.at>
# All rights reserved.
#
# Redistribution and use in source and binary forms, with or without
# modification, are permitted provided that the following conditions are met:
#
# * Redistributions of source code must retain the above copyright
#   notice, this list of conditions and the following disclaimer.
#
# * Redistributions in binary form must reproduce the above copyright
#   notice, this list of conditions and the following disclaimer in
#   the documentation and/or other materials provided with the
#   distribution.
#
# * Neither the name of the copyright holders nor the names of
#   contributors may be used to endorse or promote products derived
#   from this software without specific prior written permission.
#
# THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
# AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
# IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
# ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT OWNER OR CONTRIBUTORS BE
# LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR
# CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF
# SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS
# INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN
# CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)
# ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
# POSSIBILITY OF SUCH DAMAGE.
#
#
# Do make for the avr libc.
#
# usage: domake
#        or
#        domake install
#        or
#        domake any_other_make_target
#
# This script will execute make in the build directory.
# It will first set the path to the path, where the cross compiler
# can be found. If your cross compiler is in an other directory,
# please change the "PREFIX:" line below or specify it at the command line
# ("PREFIX=what_you_want domake").
# If you have the path to the cross compiler in your default path, you will
# not need this script.
# Go to the build directory and execute make.
#
# This script needs, that the "doconf" script was executed befor.
#

# where does it go? (allow to overwrite it at the command line)
: ${PREFIX:=/usr/local}
# which make utility to use?  Some installations might call that gmake.
: ${MAKE:=make}

if test ! -f ./build/Makefile; then
   echo "You must run doconf first!"
   exit 1
fi

cd build
PATH=$PREFIX/bin:$PATH
${MAKE} $*
cd ..
